{"version":3,"sources":["components/card/Card.js","components/pagegame/game.js","Store/actions/action.js","components/startPage/StartPage.js","App.js","reportWebVitals.js","Store/reducers/reducer.js","Store/store.js","index.js"],"names":["Card","card","handlChoice","flipped","className","src","name","alt","onClick","connect","state","choiceOne","choiceTwo","datacard","cards","game","player","dispatch","shuffleCards","type","actionHandlChoice","actionMatched","actionResetTour","actionNewgame","gamesend","socket","a","emit","useState","hrs","mins","secs","setTime","tick","parseInt","_id","players","time","useEffect","timerId","setInterval","clearInterval","resetTurn","setTimeout","toString","padStart","map","matched","StartPage","setName","onChange","event","target","value","placeholder","actionNewPlayer","socketIOClient","on","data","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState1","flag","isplaying","score","store","createStore","action","shuffledCards","sort","Math","random","v","id","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1233322e.chunk.js","sourcesContent":["import './card.css'\nconst Card = ({ card, handlChoice, flipped }) => {\n    const handleClick = () => {\n        handlChoice(card)\n    }\n    return (\n        <div className=\"card\">\n            <div className={flipped ? \"flipped\": \"\"}>\n                <img className=\"front\" src={\"/cards/\"+ card.name} alt='front'/>\n                <img \n                    className=\"back\" \n                    src={\"/cards/back.jpg\"} \n                    onClick={handleClick} \n                    alt='back'/>\n            </div>\n        </div>\n    )\n}\nexport default Card","import { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { gamesend } from \"../../Store/actions/action\";\nimport Card from \"../card/Card\";\nimport \"./game.css\";\nconst Game = ({\n    datacard,\n    shuffleCards,\n    actionHandlChoice,\n    choiceOne,\n    choiceTwo,\n    actionMatched,\n    actionResetTour,\n    player,\n    socket,\n    game,\n    gamesend\n}) => {\n    const [[hrs, mins, secs], setTime] = useState([0, 0, 60]);\n    const reset = () => setTime([parseInt(0), parseInt(0), parseInt(60)]);\n    const tick = () => {\n        if (hrs === 0 && mins === 0 && secs === 0){\n            reset()\n        }\n        else {\n            socket.emit('getgame', { game: game._id, player: game.players[0]})\n            setTime([hrs, mins, game.time]);\n        }\n    };\n    useEffect(() => {\n        const timerId = setInterval(() => tick(), 1000);\n        return () => clearInterval(timerId);\n    });\n    const handlChoice = (card) => {\n        actionHandlChoice(card);\n    };\n    const resetTurn = () => {\n        actionResetTour();\n    };\n    // compare two card\n    useEffect(() => {\n        if (choiceOne && choiceTwo) {\n            if (choiceOne.name === choiceTwo.name) {\n                actionMatched();\n                resetTurn();\n            } else {\n                setTimeout(resetTurn, 1000);\n            }\n            socket.emit('test', { game: game._id, choiceOne: choiceOne.name, choiceTwo: choiceTwo.name })\n        }\n    }, [choiceOne, choiceTwo]);\n\n    return (\n        <div className=\"grid\">\n            <div>\n            <p>{player.name}</p>\n            <p>{`${hrs.toString().padStart(2, '0')}:${mins\n            .toString()\n            .padStart(2, '0')}:${secs.toString().padStart(2, '0')}`}</p> \n        </div>\n            <button\n                onClick={() => {\n                    shuffleCards();\n                }}\n            >\n                shuffle\n            </button>\n            <div className=\"card-grid\">\n                {game.cards.map((card) => (\n                    <Card\n                        key={card._id}\n                        card={card}\n                        handlChoice={handlChoice}\n                        flipped={card === choiceOne || card === choiceTwo || card.matched}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n        choiceOne: state.choiceOne,\n        choiceTwo: state.choiceTwo,\n        datacard: state.cards,\n        game: state.game,\n        player: state.player\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        shuffleCards: () => {\n            dispatch({ type: \"shuffle\" });\n        },\n        actionHandlChoice: (card) => {\n            dispatch({ type: \"handlChoice\", card: card });\n        },\n        actionMatched: () => {\n            dispatch({ type: \"matched\" });\n        },\n        actionResetTour: () => {\n            dispatch({ type: \"resetTour\" });\n        },\n        actionNewgame: (game) => {\n            dispatch({ type: \"newgame\", game: game });\n        },\n        gamesend: (socket,game) => dispatch(gamesend(socket,game))\n    };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\n","export const increment = () => {\n    return {\n        type :'increment',\n    }\n}\nexport const decrement = () => {\n    return {\n        type: 'decrement'\n    }\n}\n\nexport const shuffle = () => {\n    return {\n        type: 'shuffle'\n    }\n}\n\nexport const handlChoice = (card) => {\n    return {\n        type: 'handlChoice',\n        card: card\n    }\n}\n\nexport const resetTour = () => {\n    return {\n        type: 'resetTour',\n    }\n}\n\nexport const matched = () => {\n    return {\n        type: 'matched'\n    }\n}\n\nexport const newgame = (game) => {\n    return {\n        type: 'newgame',\n        game: game\n    }\n}\n\nexport const newplayer = (player) => {\n    return {\n        type: 'newPlayer',\n        player: player\n    }\n}\n/*  ------------------ASYNC---------------------- */\n\n export const gamesend = (socket,game) => {\n\treturn async (dispatch) => {\n        await dispatch( {type: 'matched'})\n\t    socket.emit('test', game)\n\t}\t\n}","import './startpage.css';\nimport { useState } from 'react';\n\nconst StartPage = ({socket}) => {\n    const [name, setName] = useState('')\n\n    const newPlayer = () => {\n        socket.emit('player', {name: name})\n    }\n    const handleChange = function(event) {\n        setName(event.target.value)\n      }\n    return (\n        <div className=\"main\">\n            <div className=\"panel\">\n                <input className=\"panel-username\" onChange={handleChange} type=\"text\" placeholder=\"Your name..\"></input>\n                <button className=\"panel-start\" onClick={() => {newPlayer()}}>start</button>\n            </div>\n        </div>\n    )\n}\nexport default StartPage","import Game from './components/pagegame/game';\nimport StartPage from './components/startPage/StartPage';\nimport { connect } from 'react-redux';\nimport socketIOClient from \"socket.io-client\";\nconst ENDPOINT = 'http://app:3000'\n\nfunction App({ game, player, actionNewgame, actionNewPlayer}) {\n  const socket = socketIOClient(ENDPOINT)\n\n  socket.on('newGame', (data) => {\n    actionNewgame(data.game)\n  })\n  socket.on('newPlayer', (data) => {\n    console.log(data)\n    actionNewPlayer(data.player)\n  })\n\n  function startPageOrgamePage () {\n    if(game._id) {\n      return <Game socket= {socket} ></Game>\n    }\n    return <StartPage socket={socket}></StartPage>\n  }\n  return (\n    <div className=\"App\">\n      {\n        startPageOrgamePage()\n      }\n    </div>\n  );\n}\nconst mapStateToProps = (state) => {\n  return {\n      game: state.game\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      actionNewgame: (game) => {\n          dispatch({ type: \"newgame\", game: game });\n      },\n      actionNewPlayer: (player) => {\n        dispatch({type: 'newPlayer', player})\n      }\n  };\n};\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import game from \"../../components/pagegame/game\";\n\n// const initialState = { counter: 10 }\nconst initialState1 = {\n  cards: [\n    { matched: false, name: \"A-P.jpg\", _id: 1 },\n    { matched: false, name: \"J-P.jpg\", _id: 2 },\n    { matched: false, name: \"10-P.jpg\", _id: 3 },\n    { matched: false, name: \"K-P.jpg\", _id: 4 },\n    { matched: false, name: \"Q-P.jpg\", _id: 5 },\n  ],\n  choiceOne: null,\n  choiceTwo: null,\n  player: {\n    _id: null,\n    name: null,\n    flag: null,\n    time: null,\n    isplaying: null,\n    score: null\n  },\n  game: {\n    _id: null,\n    time:null,\n    cards: null,\n    players: null\n  }\n};\n\nexport function reducer(state = initialState1, action) {\n  switch (action.type) {\n    case \"shuffle\":\n      const shuffledCards = [...state.cards, ...state.cards]\n        .sort(() => Math.random() - 0.5)\n        .map((v) => {\n          return { ...v, id: Math.random() };\n        });\n      return { ...state, cards: shuffledCards };\n    case \"handlChoice\":\n        return state.choiceOne ? { ...state, choiceTwo: action.card }: { ...state, choiceOne: action.card }\n    case \"matched\": \n        const cards = state.game.cards.map((card) => {\n            if(card.name === state.choiceOne.name) {\n                return { ...card, matched: true }\n            } else {\n                return card\n            }\n        })\n        return { ...state, game: {...state.game, cards} }\n    case \"resetTour\":\n        return {...state, choiceOne: null, choiceTwo: null}\n    case \"newPlayer\":\n        return {...state, player: {...state.player, ...action.player}}\n    case \"newgame\":\n      return { ...state, game: action.game }\n    default:\n      return state;\n  }\n}\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { reducer } from \"./reducers/reducer\";\nimport thunk from 'redux-thunk'\n\nexport const store = createStore(reducer, compose(applyMiddleware(thunk)));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './Store/store';\n\n\n\nReactDOM.render(\n      <Provider store={store}>\n        <App />\n      </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}